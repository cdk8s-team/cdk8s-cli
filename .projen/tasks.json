{
  "tasks": {
    "clobber": {
      "name": "clobber",
      "category": "30.maintain",
      "description": "hard resets to HEAD of origin and cleans the local repo",
      "env": {
        "BRANCH": "$(git branch --show-current)"
      },
      "steps": [
        {
          "exec": "git checkout -b scratch",
          "name": "save current HEAD in \"scratch\" branch"
        },
        {
          "exec": "git checkout $BRANCH"
        },
        {
          "exec": "git fetch origin",
          "name": "fetch latest changes from origin"
        },
        {
          "exec": "git reset --hard origin/$BRANCH",
          "name": "hard reset to origin commit"
        },
        {
          "exec": "git clean -fdx",
          "name": "clean all untracked files"
        },
        {
          "say": "ready to rock! (unpushed commits are under the \"scratch\" branch)"
        }
      ],
      "condition": "git diff --exit-code > /dev/null"
    },
    "compile": {
      "name": "compile",
      "category": "00.build",
      "description": "Only compile",
      "steps": [
        {
          "exec": "tsc"
        }
      ]
    },
    "test:compile": {
      "name": "test:compile",
      "category": "10.test",
      "description": "compiles the test code",
      "steps": [
        {
          "exec": "tsc --noEmit --project tsconfig.jest.json"
        }
      ]
    },
    "test": {
      "name": "test",
      "category": "10.test",
      "description": "Run tests",
      "steps": [
        {
          "spawn": "test:compile"
        },
        {
          "exec": "jest --passWithNoTests --all --updateSnapshot"
        },
        {
          "spawn": "eslint"
        }
      ]
    },
    "build": {
      "name": "build",
      "category": "00.build",
      "description": "Full release build (test+compile)",
      "steps": [
        {
          "exec": "npx projen"
        },
        {
          "spawn": "compile"
        },
        {
          "spawn": "test"
        },
        {
          "spawn": "package"
        }
      ]
    },
    "test:watch": {
      "name": "test:watch",
      "category": "10.test",
      "description": "Run jest in watch mode",
      "steps": [
        {
          "exec": "jest --watch"
        }
      ]
    },
    "test:update": {
      "name": "test:update",
      "category": "10.test",
      "description": "Update jest snapshots",
      "steps": [
        {
          "exec": "jest --updateSnapshot"
        }
      ]
    },
    "bump": {
      "name": "bump",
      "category": "20.release",
      "description": "Bumps version based on latest git tag and generates a changelog entry",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": ".changelog.tmp.md"
      },
      "steps": [
        {
          "builtin": "release/bump-version"
        }
      ],
      "condition": "! git log --oneline -1 | grep -q \"chore(release):\""
    },
    "unbump": {
      "name": "unbump",
      "category": "20.release",
      "description": "Restores version to 0.0.0",
      "env": {
        "OUTFILE": "package.json",
        "CHANGELOG": ".changelog.tmp.md"
      },
      "steps": [
        {
          "builtin": "release/reset-version"
        }
      ]
    },
    "upgrade-dependencies": {
      "name": "upgrade-dependencies",
      "description": "upgrade dependencies",
      "env": {
        "CI": "0"
      },
      "steps": [
        {
          "exec": "npm-check-updates --upgrade --target=minor"
        },
        {
          "exec": "yarn install --check-files"
        },
        {
          "exec": "yarn upgrade"
        },
        {
          "exec": "npx projen"
        }
      ]
    },
    "default": {
      "name": "default",
      "steps": [
        {
          "exec": "node .projenrc.js"
        }
      ]
    },
    "watch": {
      "name": "watch",
      "category": "00.build",
      "description": "Watch & compile in the background",
      "steps": [
        {
          "exec": "tsc -w"
        }
      ]
    },
    "package": {
      "name": "package",
      "category": "20.release",
      "description": "Create an npm tarball",
      "steps": [
        {
          "exec": "rm -fr dist"
        },
        {
          "exec": "mkdir -p dist/js"
        },
        {
          "exec": "yarn pack"
        },
        {
          "exec": "mv *.tgz dist/js/"
        }
      ]
    },
    "eslint": {
      "name": "eslint",
      "category": "10.test",
      "description": "Runs eslint against the codebase",
      "steps": [
        {
          "exec": "eslint --ext .ts,.tsx --fix --no-error-on-unmatched-pattern src test build-tools .projenrc.js"
        }
      ]
    }
  },
  "env": {
    "PATH": "$(npx -c \"node -e \\\"console.log(process.env.PATH)\\\"\")"
  },
  "//": "~~ Generated by projen. To modify, edit .projenrc.js and run \"npx projen\"."
}
