// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Helm synthesis --chart-api-version is v1 with all inputs from cli and no config file is present 1`] = `
Object {
  "Chart.yaml": "apiVersion: v1
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v1 with all inputs from config file and no related cli inputs 1`] = `
Object {
  "Chart.yaml": "apiVersion: v1
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v1 with different inputs in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v1
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v1 with inputs duplicated in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v1
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 and crds are present with all inputs from cli and no config file is present 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "# Example from: https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crontabs.stable.example.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.example.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                cronSpec:
                  type: string
                image:
                  type: string
                replicas:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crontabs
    # singular name to be used as an alias on the CLI and for display
    singular: crontab
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CronTab
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 and crds are present with all inputs from config file and no related cli inputs 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "# Example from: https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crontabs.stable.example.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.example.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                cronSpec:
                  type: string
                image:
                  type: string
                replicas:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crontabs
    # singular name to be used as an alias on the CLI and for display
    singular: crontab
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CronTab
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 and crds are present with different inputs in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "# Example from: https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crontabs.stable.example.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.example.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                cronSpec:
                  type: string
                image:
                  type: string
                replicas:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crontabs
    # singular name to be used as an alias on the CLI and for display
    singular: crontab
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CronTab
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 and crds are present with inputs duplicated in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "# Example from: https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: crontabs.stable.example.com
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: stable.example.com
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                cronSpec:
                  type: string
                image:
                  type: string
                replicas:
                  type: integer
  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: crontabs
    # singular name to be used as an alias on the CLI and for display
    singular: crontab
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: CronTab
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - ct",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 without crds with all inputs from cli and no config file is present 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 without crds with all inputs from config file and no related cli inputs 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 without crds with different inputs in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis --chart-api-version is v2 without crds with inputs duplicated in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis filename url hash remains the same across synthesis with all inputs from cli and no config file is present 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "{
  \\"apiVersion\\": \\"apiextensions.k8s.io/v1\\",
  \\"kind\\": \\"CustomResourceDefinition\\",
  \\"metadata\\": {
    \\"name\\": \\"crontabs.stable.example.com\\"
  },
  \\"spec\\": {
    \\"group\\": \\"stable.example.com\\",
    \\"versions\\": [
      {
        \\"name\\": \\"v1\\",
        \\"served\\": true,
        \\"storage\\": true,
        \\"schema\\": {
          \\"openAPIV3Schema\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
              \\"spec\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"cronSpec\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"image\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"replicas\\": {
                    \\"type\\": \\"integer\\"
                  }
                }
              }
            }
          }
        }
      }
    ],
    \\"scope\\": \\"Namespaced\\",
    \\"names\\": {
      \\"plural\\": \\"crontabs\\",
      \\"singular\\": \\"crontab\\",
      \\"kind\\": \\"CronTab\\",
      \\"shortNames\\": [
        \\"ct\\"
      ]
    }
  }
}",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis filename url hash remains the same across synthesis with all inputs from config file and no related cli inputs 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "{
  \\"apiVersion\\": \\"apiextensions.k8s.io/v1\\",
  \\"kind\\": \\"CustomResourceDefinition\\",
  \\"metadata\\": {
    \\"name\\": \\"crontabs.stable.example.com\\"
  },
  \\"spec\\": {
    \\"group\\": \\"stable.example.com\\",
    \\"versions\\": [
      {
        \\"name\\": \\"v1\\",
        \\"served\\": true,
        \\"storage\\": true,
        \\"schema\\": {
          \\"openAPIV3Schema\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
              \\"spec\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"cronSpec\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"image\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"replicas\\": {
                    \\"type\\": \\"integer\\"
                  }
                }
              }
            }
          }
        }
      }
    ],
    \\"scope\\": \\"Namespaced\\",
    \\"names\\": {
      \\"plural\\": \\"crontabs\\",
      \\"singular\\": \\"crontab\\",
      \\"kind\\": \\"CronTab\\",
      \\"shortNames\\": [
        \\"ct\\"
      ]
    }
  }
}",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis filename url hash remains the same across synthesis with different inputs in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "{
  \\"apiVersion\\": \\"apiextensions.k8s.io/v1\\",
  \\"kind\\": \\"CustomResourceDefinition\\",
  \\"metadata\\": {
    \\"name\\": \\"crontabs.stable.example.com\\"
  },
  \\"spec\\": {
    \\"group\\": \\"stable.example.com\\",
    \\"versions\\": [
      {
        \\"name\\": \\"v1\\",
        \\"served\\": true,
        \\"storage\\": true,
        \\"schema\\": {
          \\"openAPIV3Schema\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
              \\"spec\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"cronSpec\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"image\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"replicas\\": {
                    \\"type\\": \\"integer\\"
                  }
                }
              }
            }
          }
        }
      }
    ],
    \\"scope\\": \\"Namespaced\\",
    \\"names\\": {
      \\"plural\\": \\"crontabs\\",
      \\"singular\\": \\"crontab\\",
      \\"kind\\": \\"CronTab\\",
      \\"shortNames\\": [
        \\"ct\\"
      ]
    }
  }
}",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`Helm synthesis filename url hash remains the same across synthesis with inputs duplicated in cli and config file 1`] = `
Object {
  "Chart.yaml": "apiVersion: v2
name: __omitted__
version: 1.1.1
description: __omitted__
type: application
",
  "README.md": "This Helm chart is generated using cdk8s. Any manual changes to the chart would be discarded once cdk8s app is synthesized again with \`--format helm\`.",
  "crds/__omitted__": "{
  \\"apiVersion\\": \\"apiextensions.k8s.io/v1\\",
  \\"kind\\": \\"CustomResourceDefinition\\",
  \\"metadata\\": {
    \\"name\\": \\"crontabs.stable.example.com\\"
  },
  \\"spec\\": {
    \\"group\\": \\"stable.example.com\\",
    \\"versions\\": [
      {
        \\"name\\": \\"v1\\",
        \\"served\\": true,
        \\"storage\\": true,
        \\"schema\\": {
          \\"openAPIV3Schema\\": {
            \\"type\\": \\"object\\",
            \\"properties\\": {
              \\"spec\\": {
                \\"type\\": \\"object\\",
                \\"properties\\": {
                  \\"cronSpec\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"image\\": {
                    \\"type\\": \\"string\\"
                  },
                  \\"replicas\\": {
                    \\"type\\": \\"integer\\"
                  }
                }
              }
            }
          }
        }
      }
    ],
    \\"scope\\": \\"Namespaced\\",
    \\"names\\": {
      \\"plural\\": \\"crontabs\\",
      \\"singular\\": \\"crontab\\",
      \\"kind\\": \\"CronTab\\",
      \\"shortNames\\": [
        \\"ct\\"
      ]
    }
  }
}",
  "templates/chart-c86185a7.k8s.yaml": "apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
",
}
`;

exports[`validations synth can write the validation reports to a file 1`] = `
"{
  \\"reports\\": [
    {
      \\"title\\": \\"Validation Report (<__dirname-replaced>/__resources__/validation-plugin@0.0.0)\\",
      \\"violations\\": [
        {
          \\"ruleName\\": \\"Some rule\\",
          \\"recommendation\\": \\"Some recommendation\\",
          \\"violatingConstructs\\": [
            {
              \\"manifestPath\\": \\"dist/chart-c86185a7.k8s.yaml\\",
              \\"resourceName\\": \\"config-map\\",
              \\"locations\\": [
                \\"location1\\",
                \\"location2\\"
              ],
              \\"constructPath\\": \\"Chart/Object\\"
            }
          ],
          \\"fix\\": \\"Some fix\\"
        }
      ],
      \\"summary\\": {
        \\"status\\": \\"success\\",
        \\"plugin\\": \\"<__dirname-replaced>/__resources__/validation-plugin\\",
        \\"version\\": \\"0.0.0\\"
      }
    }
  ]
}"
`;
